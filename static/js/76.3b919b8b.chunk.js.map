{"version":3,"file":"static/js/76.3b919b8b.chunk.js","mappings":"yNACA,GAAgB,SAAW,uBAAuB,QAAU,uB,SC4D5D,EAnDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAyBR,OAvBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,YAAe,IACbC,EAAO,CACXC,KAFgB,EAAXV,KAEMW,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,MAAiD,CAC9DX,GAAIQ,EACJI,IAAKH,EAAY,8CAC0BA,GACvC,wDACJC,KAAAA,EACAC,UAAAA,EANa,KAUXE,EAAUC,OAAOC,OAAOV,GAAMW,MAAK,SAAAC,GAAK,OAAIC,MAAMC,QAAQF,EAAlB,IAE9CpB,EAAQgB,EACT,IACAO,OAAM,SAAAtB,GACLC,EAASD,EACV,GACJ,GAAE,CAACE,KAGF,gCACGF,IAAS,uBAAIA,IACbF,GAAQA,EAAKyB,OAAS,GACrB,eAAIC,UAAWC,EAAAA,SAAf,SACG3B,EAAKW,KAAI,YAAmC,IAAhCP,EAA+B,EAA/BA,GAAIY,EAA2B,EAA3BA,IAAKF,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC1B,OACE,gBAAIW,UAAWC,EAAAA,SAAf,WACE,gBAAKD,UAAWC,EAAAA,QAAaC,IAAKZ,EAAKa,IAAKf,KAC5C,uBAAIA,KACJ,uCAAeC,OAHiBX,EAMrC,MAGH,4CAIP,C,sLCvDK0B,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAmB,mCAAG,WAAMC,GAAN,uFACVN,EAASO,IAAT,sBAAoC,CACzDJ,OAAQ,CACNG,KAAAA,KAH6B,cAC3BE,EAD2B,yBAO1BA,EAAS7B,MAPiB,2CAAH,sDAUnB8B,EAAW,mCAAG,WAAMC,GAAN,uFACFV,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNO,MAAAA,KAHqB,cACnBF,EADmB,yBAOlBA,EAAS7B,MAPS,2CAAH,sDAUXgC,EAAY,mCAAG,WAAMrC,GAAN,uFACH0B,EAASO,IAAT,iBAAuBjC,GAAM,CAClD6B,OAAQ,CACNS,SAAUtC,KAHY,cACpBkC,EADoB,yBAOnBA,EAAS7B,MAPU,2CAAH,sDAUZF,EAAe,mCAAG,WAAMH,GAAN,uFACN0B,EAASO,IAAT,iBAAuBjC,EAAvB,YAAqC,CAC1D6B,OAAQ,CACNS,SAAUtC,KAHe,cACvBkC,EADuB,yBAOtBA,EAAS7B,MAPa,2CAAH,sDAUfkC,EAAe,mCAAG,WAAMvC,GAAN,uFACN0B,EAASO,IAAT,iBAAuBjC,EAAvB,YAAqC,CAC1D6B,OAAQ,CACNS,SAAUtC,KAHe,cACvBkC,EADuB,yBAOtBA,EAAS7B,MAPa,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castImg\":\"Cast_castImg__T4WbF\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// ========== API ==========\nimport { getMovieCredits } from 'services/api';\n\n// ========== styles ==========\n\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    getMovieCredits(id)\n      .then(({ cast }) => {\n        const data = {\n          item: cast.map(({ cast_id, profile_path, name, character }) => ({\n            id: cast_id,\n            img: profile_path\n              ? `https://image.tmdb.org/t/p/original/${profile_path}`\n              : 'https://via.placeholder.com/200x300.png?text=No+Image',\n            name,\n            character,\n          })),\n        };\n\n        const dataArr = Object.values(data).find(value => Array.isArray(value));\n\n        setCast(dataArr);\n      })\n      .catch(error => {\n        setError(error);\n      });\n  }, [id]);\n\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {cast && cast.length > 0 ? (\n        <ul className={css.castList}>\n          {cast.map(({ id, img, name, character }) => {\n            return (\n              <li className={css.castItem} key={id}>\n                <img className={css.castImg} src={img} alt={name}></img>\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        'We do not find the cast for this movie.'\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'a20616a55c666b428048dd0d7103de62';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendingMovies = async page => {\n  const response = await instance.get(`/trending/movie/day`, {\n    params: {\n      page,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovies = async query => {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await instance.get(`/movie/${id}`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["useState","cast","setCast","error","setError","id","useParams","useEffect","getMovieCredits","then","data","item","map","cast_id","profile_path","name","character","img","dataArr","Object","values","find","value","Array","isArray","catch","length","className","css","src","alt","instance","axios","baseURL","params","api_key","fetchTrendingMovies","page","get","response","fetchMovies","query","getMovieById","movie_id","getMovieReviews"],"sourceRoot":""}