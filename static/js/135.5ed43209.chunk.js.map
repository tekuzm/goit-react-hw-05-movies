{"version":3,"file":"static/js/135.5ed43209.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"MovieDetails_backBtn__rLQ3F\",\"detailsWrap\":\"MovieDetails_detailsWrap__JXd+t\",\"descr\":\"MovieDetails_descr__4U2CA\",\"detailsImg\":\"MovieDetails_detailsImg__lRC61\",\"infoWrap\":\"MovieDetails_infoWrap__ylYWq\",\"active\":\"MovieDetails_active__uPNdW\"};","import { useEffect, useState } from 'react';\nimport { NavLink, useParams, Outlet, useNavigate } from 'react-router-dom';\n\n// ========== API ==========\n\nimport { getMovieById } from 'services/api';\n\n// ========== styles ==========\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const [error, setError] = useState();\n\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n\n  let activeStyle = {\n    color: '#ff0000',\n    textDecoration: 'underline',\n  };\n\n  useEffect(() => {\n    getMovieById(id)\n      .then(\n        ({\n          poster_path,\n          title,\n          release_date,\n          vote_average,\n          overview,\n          genres,\n        }) => {\n          const info = {\n            poster: poster_path\n              ? `https://image.tmdb.org/t/p/original/${poster_path}`\n              : 'https://via.placeholder.com/200x300.png?text=No+Image',\n            title,\n            date: new Date(release_date).getFullYear(),\n            popularity: (vote_average * 10).toFixed(0),\n            overview,\n            genresNames: genres.map(genre => genre.name).join(', '),\n          };\n\n          setDetails(info);\n        }\n      )\n      .catch(error => setError(error));\n  }, [id]);\n\n  return (\n    <main>\n      <button\n        className={css.backBtn}\n        type=\"button\"\n        onClick={() => {\n          navigate(-1);\n        }}\n      >\n        Back\n      </button>\n\n      {error && <p>{error}</p>}\n      {details && (\n        <div className={css.detailsWrap}>\n          <div className={css.descr}>\n            <img\n              className={css.detailsImg}\n              src={details.poster}\n              alt={details.title}\n            ></img>\n\n            <div>\n              <h1>\n                {details.title} ({details.date})\n              </h1>\n              <p>User Score: {details.popularity}%</p>\n              <h2>Overview</h2>\n              {details.overview ? (\n                <p>{details?.overview}</p>\n              ) : (\n                'Sorry, there is no overview!'\n              )}\n              <h3>Genres</h3>\n              <p>{details.genresNames}</p>\n            </div>\n          </div>\n\n          <div>\n            <h4>Additional information</h4>\n            <ul className={css.infoWrap}>\n              <li>\n                <NavLink\n                  to=\"cast\"\n                  replace\n                  style={({ isActive }) => (isActive ? activeStyle : undefined)}\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"reviews\"\n                  replace\n                  style={({ isActive }) => (isActive ? activeStyle : undefined)}\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </div>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'a20616a55c666b428048dd0d7103de62';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const fetchTrendingMovies = async page => {\n  const response = await instance.get(`/trending/movie/day`, {\n    params: {\n      page,\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchMovies = async query => {\n  const response = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await instance.get(`/movie/${id}`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      movie_id: id,\n    },\n  });\n\n  return response.data;\n};\n"],"names":["useState","details","setDetails","error","setError","id","useParams","navigate","useNavigate","activeStyle","color","textDecoration","useEffect","getMovieById","then","poster_path","title","release_date","vote_average","overview","genres","info","poster","date","Date","getFullYear","popularity","toFixed","genresNames","map","genre","name","join","catch","className","css","type","onClick","src","alt","to","replace","style","isActive","undefined","instance","axios","baseURL","params","api_key","fetchTrendingMovies","page","get","response","data","fetchMovies","query","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}